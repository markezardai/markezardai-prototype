{
  "description": "MarkezardAI Required Secrets Configuration",
  "version": "1.0.0",
  "last_updated": "2025-10-12",
  "secrets": {
    "firebase": {
      "NEXT_PUBLIC_FIREBASE_API_KEY": {
        "description": "Firebase Web API Key for frontend authentication",
        "required": true,
        "example": "AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "source": "Firebase Console > Project Settings > General > Web API Key",
        "environment": "frontend"
      },
      "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN": {
        "description": "Firebase Auth domain for authentication",
        "required": true,
        "example": "your-project-id.firebaseapp.com",
        "source": "Firebase Console > Project Settings > General",
        "environment": "frontend"
      },
      "NEXT_PUBLIC_FIREBASE_PROJECT_ID": {
        "description": "Firebase Project ID",
        "required": true,
        "example": "your-project-id",
        "source": "Firebase Console > Project Settings > General",
        "environment": "frontend"
      },
      "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET": {
        "description": "Firebase Storage bucket name",
        "required": true,
        "example": "your-project-id.appspot.com",
        "source": "Firebase Console > Project Settings > General",
        "environment": "frontend"
      },
      "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID": {
        "description": "Firebase Cloud Messaging sender ID",
        "required": true,
        "example": "123456789012",
        "source": "Firebase Console > Project Settings > Cloud Messaging",
        "environment": "frontend"
      },
      "NEXT_PUBLIC_FIREBASE_APP_ID": {
        "description": "Firebase App ID for web application",
        "required": true,
        "example": "1:123456789012:web:abcdef123456789012345",
        "source": "Firebase Console > Project Settings > General > Your apps",
        "environment": "frontend"
      },
      "FIREBASE_SERVICE_ACCOUNT_JSON": {
        "description": "Firebase Admin SDK service account JSON (as string)",
        "required": true,
        "example": "{\"type\":\"service_account\",\"project_id\":\"your-project\",\"private_key_id\":\"...\"}",
        "source": "Firebase Console > Project Settings > Service Accounts > Generate new private key",
        "environment": "backend",
        "security_note": "Store as JSON string, never commit to git"
      }
    },
    "gemini_ai": {
      "GEMINI_API_KEY_1": {
        "description": "Primary Gemini AI API key for campaign generation",
        "required": true,
        "example": "AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "source": "Google AI Studio > API Keys",
        "environment": "backend"
      },
      "GEMINI_API_KEY_2": {
        "description": "Secondary Gemini AI API key for rotation",
        "required": false,
        "example": "AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "source": "Google AI Studio > API Keys",
        "environment": "backend",
        "note": "Recommended for production to avoid quota limits"
      },
      "GEMINI_API_KEY_3": {
        "description": "Tertiary Gemini AI API key for rotation",
        "required": false,
        "example": "AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "source": "Google AI Studio > API Keys",
        "environment": "backend",
        "note": "Optional for high-volume usage"
      },
      "GEMINI_API_KEY_4": {
        "description": "Quaternary Gemini AI API key for rotation",
        "required": false,
        "example": "AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "source": "Google AI Studio > API Keys",
        "environment": "backend",
        "note": "Optional for enterprise usage"
      }
    },
    "meta_ads": {
      "META_ACCESS_TOKEN": {
        "description": "Meta Ads API system user access token",
        "required": false,
        "example": "EAABwzLixnjYBOxxxxxxxxxxxxxxxxxxxxxxxx",
        "source": "Meta Business > System Users > Generate Token",
        "environment": "backend",
        "permissions": ["ads_management", "ads_read", "business_management"],
        "note": "Required for live campaign publishing, optional for dry-run mode"
      },
      "META_AD_ACCOUNT_ID": {
        "description": "Meta Ads account ID for campaign publishing",
        "required": false,
        "example": "act_123456789012345",
        "source": "Meta Ads Manager > Account Settings",
        "environment": "backend",
        "note": "Required for live campaign publishing"
      }
    },
    "application": {
      "NEXT_PUBLIC_BACKEND_URL": {
        "description": "Backend API URL for frontend to connect to",
        "required": true,
        "example": "http://localhost:8000",
        "default": "http://localhost:8000",
        "environment": "frontend",
        "production_example": "https://api.markezardai.com"
      },
      "ENVIRONMENT": {
        "description": "Application environment",
        "required": false,
        "example": "development",
        "default": "development",
        "options": ["development", "staging", "production"],
        "environment": "backend"
      }
    }
  },
  "setup_instructions": {
    "firebase": [
      "1. Go to https://console.firebase.google.com/",
      "2. Create a new project or select existing",
      "3. Enable Authentication > Sign-in method > Email/Password and Google",
      "4. Create Firestore database in production mode",
      "5. Go to Project Settings > General > Your apps",
      "6. Add web app and copy configuration values",
      "7. Go to Service Accounts > Generate new private key",
      "8. Download JSON and convert to string for FIREBASE_SERVICE_ACCOUNT_JSON"
    ],
    "gemini_ai": [
      "1. Go to https://makersuite.google.com/app/apikey",
      "2. Create new API key",
      "3. Copy key to GEMINI_API_KEY_1",
      "4. Optionally create additional keys for rotation",
      "5. Test with a simple API call to verify functionality"
    ],
    "meta_ads": [
      "1. Go to https://business.facebook.com/",
      "2. Create Business Manager account",
      "3. Add Ad Account to Business Manager",
      "4. Create System User in Business Settings",
      "5. Generate access token with ads_management permissions",
      "6. Copy token to META_ACCESS_TOKEN",
      "7. Copy ad account ID (act_xxxxx) to META_AD_ACCOUNT_ID"
    ]
  },
  "security_notes": [
    "Never commit actual secret values to version control",
    "Use environment variables or secure secret management",
    "Rotate API keys regularly for production systems",
    "Monitor API usage and set up billing alerts",
    "Use least-privilege access for all service accounts",
    "Enable audit logging for all API access",
    "Store Firebase service account JSON securely",
    "Use different keys for development and production"
  ],
  "testing_without_secrets": {
    "description": "MarkezardAI can run in mock mode without real API keys",
    "mock_mode_features": [
      "Firebase authentication uses mock user",
      "Gemini AI returns structured mock responses",
      "Meta Ads API returns simulated campaign data",
      "Website scraping works with any public site",
      "All endpoints return realistic test data"
    ],
    "limitations": [
      "No real AI generation (uses templates)",
      "No actual campaign publishing",
      "No real analytics data",
      "Limited to mock user authentication"
    ]
  },
  "production_requirements": {
    "minimum_required": [
      "NEXT_PUBLIC_FIREBASE_API_KEY",
      "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN", 
      "NEXT_PUBLIC_FIREBASE_PROJECT_ID",
      "FIREBASE_SERVICE_ACCOUNT_JSON",
      "GEMINI_API_KEY_1"
    ],
    "recommended": [
      "All Firebase configuration",
      "At least 2 Gemini API keys",
      "Meta Ads configuration for publishing",
      "Production backend URL"
    ],
    "enterprise": [
      "All secrets configured",
      "4 Gemini API keys for rotation",
      "Multiple Meta ad accounts",
      "Monitoring and alerting setup"
    ]
  }
}
